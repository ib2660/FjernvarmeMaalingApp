@page "/brugeropsaetning"  
@inject FjernvarmeMaalingApp.ViewModels.BrugerOpsætningViewModel ViewModel  

<h3>Brugeropsætning</h3>  

@if (ViewModel.CurrentUser == null)  
{  
   <p>Loading...</p>  
}  
else  
{  
   <div>  
       <h4>Opdater Adgangskode</h4>  
       <EditForm Model="ViewModel" OnValidSubmit="UpdatePassword">  
           <DataAnnotationsValidator />  
           <ValidationSummary />
           <div class="form-group">  
               <label for="newPassword">Ny Adgangskode:</label>  
               <InputText id="newPassword" @bind-Value="ViewModel.NewPassword" class="form-control" />  
           </div>  
           <div class="form-group">  
               <label for="confirmPassword">Bekræft Adgangskode:</label>  
               <InputText id="confirmPassword" @bind-Value="ViewModel.ConfirmPassword" class="form-control" />  
           </div>  
           <button type="submit" class="btn btn-primary">Opdater Adgangskode</button>  
       </EditForm>  
       <p>@ViewModel.ResponseMessages[0]</p>  
   </div>  

   <div>  
       <h4>Opdater Brugeroplysninger</h4>  
       <EditForm Model="ViewModel" OnValidSubmit="UpdateUserDetails">  
           <DataAnnotationsValidator />  
           <ValidationSummary />  
           <div class="form-group">  
               <label for="consumptionType">Foretrukken forbrugstype:</label>  
               <InputSelect id="consumptionType" @bind-Value="ViewModel.SelectedConsumptionType" class="form-control">  
                   @foreach (var consumptionTypeName in ViewModel.GetConsumptionTypeNames())  
                   {  
                       <option value="@consumptionTypeName">@consumptionTypeName</option>  
                   }  
               </InputSelect>  
           </div>  
           <div class="form-group">  
               <label for="registrationStrategy">Foretrukken registreringsstrategi:</label>  
               <InputSelect id="registrationStrategy" @bind-Value="ViewModel.SelectedRegistrationStrategy" class="form-control">  
                   @foreach (var registrationStrategyName in ViewModel.GetRegistrationStrategyNames())  
                   {  
                       <option value="@registrationStrategyName">@registrationStrategyName</option>  
                   }  
               </InputSelect>  
           </div>
            <div class="form-group">
                <label for="timeFrameStrategy">Foretrukken tidsperiode for registreringer:</label>
                <InputSelect id="timeFrameStrategy" @bind-Value="ViewModel.SelectedTimeFrameStrategy" class="form-control">
                    @foreach (var TimeFrameStrategyName in ViewModel.GetTimeFrameStrategyNames())
                    {
                        <option value="@TimeFrameStrategyName">@TimeFrameStrategyName</option>
                    }
                </InputSelect>
            </div>
            <button type="submit" class="btn btn-primary">Opdater Brugeroplysninger</button>  
       </EditForm>  
       <p>@ViewModel.ResponseMessages[1]</p>  
   </div>  
}  

@code {  
   protected override async Task OnInitializedAsync()  
   {  
       await ViewModel.InitializeAsync();  
   }  

   private async Task UpdatePassword()  
   {  
       await ViewModel.UpdateUserPasswordAsync();  
   }  

   private async Task UpdateUserDetails()  
   {  
       await ViewModel.UpdateUserDetailsAsync();
   }  
}
